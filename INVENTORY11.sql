CREATE OR REPLACE PROCEDURE FETCH_SALES_DYNAMIC(
S_ORDERID NUMBER,
S_CUST_ID NUMBER
)
AS
TYPE SALES_CUR IS REF CURSOR;
S_CURSOR SALES_CUR;
SALES_REC SALES%ROWTYPE;
SQL_STMT VARCHAR2(1000) := 'SELECT SALES_DATE,ORDER_ID,PRODUCT_ID,CUSTOMER_ID,SALESPERSON_ID,QUANTITY,UNIT_PRICE,SALES_AMOUNT,TAX_AMOUNT,TOTAL_AMOUNT FROM SALES WHERE 1 = 1 ';

BEGIN
IF S_ORDERID IS NOT NULL THEN
SQL_STMT := SQL_STMT || ' AND ORDER_ID = :VAR1';
END IF;

IF S_CUST_ID IS NOT NULL THEN
SQL_STMT := SQL_STMT || ' AND CUSTOMER_ID = :VAR2';
END IF;

DBMS_OUTPUT.PUT_LINE(SQL_STMT);

IF S_ORDERID IS NOT NULL AND S_CUST_ID IS NULL THEN
OPEN S_CURSOR FOR SQL_STMT USING S_ORDERID;
ELSIF S_ORDERID IS NULL AND S_CUST_ID IS NOT NULL THEN
OPEN S_CURSOR FOR SQL_STMT USING S_CUST_ID;
ELSIF S_ORDERID IS NOT NULL AND S_CUST_ID IS NOT NULL THEN
OPEN S_CURSOR FOR SQL_STMT USING S_ORDERID,S_CUST_ID;
END IF;

LOOP
FETCH S_CURSOR INTO SALES_REC;
EXIT WHEN S_CURSOR%NOTFOUND;
DBMS_OUTPUT.PUT_LINE(SALES_REC.SALES_DATE);
DBMS_OUTPUT.PUT_LINE(SALES_REC.ORDER_ID);
DBMS_OUTPUT.PUT_LINE(SALES_REC.PRODUCT_ID);
DBMS_OUTPUT.PUT_LINE(SALES_REC.CUSTOMER_ID);
DBMS_OUTPUT.PUT_LINE(SALES_REC.SALESPERSON_ID);
DBMS_OUTPUT.PUT_LINE(SALES_REC.QUANTITY);
DBMS_OUTPUT.PUT_LINE(SALES_REC.UNIT_PRICE);
DBMS_OUTPUT.PUT_LINE(SALES_REC.SALES_AMOUNT);
DBMS_OUTPUT.PUT_LINE(SALES_REC.TAX_AMOUNT);
DBMS_OUTPUT.PUT_LINE(SALES_REC.TOTAL_AMOUNT);
END LOOP;

CLOSE S_CURSOR;

END;



EXEC FETCH_SALES_DYNAMIC(1001, 15);